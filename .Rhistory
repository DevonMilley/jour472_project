setwd("~/Documents/UMD/sem 6/JOUR472/JOUR472")
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)
library(janitor)
# Load required data
la_payouts <- read.csv("data/la_city_legal_payouts.csv")
View(la_payouts)
# Clean required data and prepare for analysis if needed.
la_payouts <- la_payouts %>% mutate(AMOUNT=as.numeric(parse_number(AMOUNT)))
# Put code to reverse engineer sentence here
#sum payouts for 2018
la_payouts%>%
group_by(Year)%>%
summarize(
count = n(),
total = sum(AMOUNT)) %>%
arrange(desc(total))
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
la_payouts_departments<-la_payouts%>%
group_by(DEPARTMENT)%>%
summarize(
case_count = n(),
total_amount = sum(AMOUNT)) %>%
arrange(desc(total_amount))
la_payouts%>%
filter(AMOUNT > 0) %>%
summarize(
total_amount_of_all_cases = sum(AMOUNT))
la_payouts_pct_share <- la_payouts_departments%>%
mutate(pct_share =(total_amount/886979072)*100)
la_payouts_wrong_imprisonment <- la_payouts %>%
filter(DEPARTMENT=="Police Department" & CASE.TYPE == "Police - False Arrest/Detention/Imprisonment") %>%
summarise(
AMOUNT
) %>%
arrange(desc(AMOUNT))
first_two_cases_wrong_imprisonment <- la_payouts_wrong_imprisonment %>%
summarise(
AMOUNT[1] + AMOUNT[2]
)
# Display results of code below this codeblock
first_two_cases_wrong_imprisonment
la_payouts_pct_share
# Put code to reverse engineer sentence here
la_payouts%>%
filter(Year == 2018, (str_detect(CASE.TYPE, 'Dangerous Condition')))%>%
summarize(
count = n(),
total = sum(AMOUNT)) %>%
arrange(desc(total))
la_payouts%>%
filter(Year == 2018 , DEPARTMENT == 'Police Department')%>%
summarize(
count = n(),
total = sum(AMOUNT))%>%
arrange(desc(total))
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
la_payouts_traffic <- la_payouts%>%
filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
arrange(desc(AMOUNT))
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
la_payouts_traffic <- la_payouts%>%
filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
arrange(desc(AMOUNT))
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
la_payouts_traffic <- la_payouts%>%
filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
arrange(desc(AMOUNT))
# Display results of code below this codeblock
la_payouts_traffic
# Put code to reverse engineer sentence here
#la_payouts_traffic <- la_payouts%>%
# filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
# arrange(desc(AMOUNT))
la_payouts_traffic <- la_payouts %>%
fitler(AMOUNT == 15000000 | AMOUNT == 9000000 & DEPARTMENT == "Department of Transportation")
# Put code to reverse engineer sentence here
#la_payouts_traffic <- la_payouts%>%
# filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
# arrange(desc(AMOUNT))
la_payouts_traffic <- la_payouts %>%
filter(AMOUNT == 15000000 | AMOUNT == 9000000 & DEPARTMENT == "Department of Transportation")
# Display results of code below this codeblock
la_payouts_traffic
# Put code to reverse engineer sentence here
#la_payouts_traffic <- la_payouts%>%
# filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
# arrange(desc(AMOUNT))
la_payouts_traffic <- la_payouts %>%
filter(AMOUNT == 15000000 | AMOUNT == 9000000)
# Display results of code below this codeblock
la_payouts_traffic
# Put code to reverse engineer sentence here
la_payouts_traffic <- la_payouts%>%
filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
arrange(desc(AMOUNT))
la_payouts_traffic_test <- la_payouts %>%
filter(AMOUNT == 15000000 | AMOUNT == 9000000)
# Display results of code below this codeblock
la_payouts_traffic
# Put code to reverse engineer sentence here
la_payouts_traffic <- la_payouts%>%
filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
arrange(desc(AMOUNT))
la_payouts_traffic_test <- la_payouts %>%
filter(AMOUNT == 15000000 | AMOUNT == 9000000)
# Display results of code below this codeblock
la_payouts_traffic
la_payouts_traffic_test
# Put code to reverse engineer sentence here
la_payouts_traffic <- la_payouts%>%
filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
arrange(desc(AMOUNT))
la_payouts_traffic_test <- la_payouts %>%
filter(AMOUNT == 15000000 | AMOUNT == 9500000)
# Display results of code below this codeblock
la_payouts_traffic
la_payouts_traffic_test
# Put code to reverse engineer sentence here
la_payouts_traffic <- la_payouts%>%
filter(DEPARTMENT == 'Department of Transportation' | (str_detect(CASE.TYPE, 'Traffic')) | DEPARTMENT == 'DEPARTMENT OF TRANSPORTATION')%>%
arrange(desc(AMOUNT))
# Display results of code below this codeblock
la_payouts_traffic
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ppp_maryland <- read_csv("data/ppp_loans_md.csv.zip")
View(ppp_maryland)
ppp_maryland_loans_by_date %>%
ggplot() +
geom_line(aes(x=date_approved, y=total_loans)) +
scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
)
maryland_ppp_top_counties <- ppp_maryland %>%
group_by(project_county_name) %>%
summarise(
total_loans = n()
) %>%
arrange(desc(total_loans)) %>%
head(10)
maryland_ppp_top_counties
maryland_ppp_top_counties %>%
ggplot()
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=project_county_name, weight=total_loans))
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans))
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans)) +
coord_flip()
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans)) +
coord_flip() +
theme_minimal()
install.packages('ggthemes')
library(ggthemes)
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans)) +
coord_flip() +
theme_economist()
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans)) +
coord_flip() +
theme_economist() +
labs(
title="Maryland Counties with Most PPP Loans\n",
x = "county\n",
y = "\ntotal loans",
caption = "source: SBA PPP loan database"
)
ppp_maryland_loans_by_date <- ppp_maryland %>%
group_by(date_approved) %>%
summarise(
total_loans=n()
)
ppp_maryland_loans_by_date
ppp_maryland_loans_by_date %>%
ggplot() +
geom_line(aes(x=date_approved, y=total_loans))
# Put code to reverse engineer sentence here
la_payouts_lines <- la_payouts %>%
ggplot() +
geom_histogram(aes(x=Year, y=total_payouts))
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
la_payouts_lines <- la_payouts %>%
ggplot() +
geom_histogram(aes(x=Year, y=total_payouts))
# Display results of code below this codeblock
la_payouts_lines
# Put code to reverse engineer sentence here
la_payouts_lines <- la_payouts %>%
ggplot() +
geom_line(aes(x=Year, y=total_payouts))
# Display results of code below this codeblock
la_payouts_lines
# Put code to reverse engineer sentence here
la_payouts_by_date <- la_payouts %>%
group_by(Year) %>%
summarise(
total_payouts=n()
)
la_payouts_lines <- la_payouts_by_date %>%
ggplot() +
geom_line(aes(x=Year, y=total_payouts))
# Display results of code below this codeblock
la_payouts_lines
ppp_maryland_loans_by_date %>%
ggplot() +
geom_line(aes(x=date_approved, y=total_loans)) +
scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
)
# Put code to reverse engineer sentence here
la_payouts_by_date <- la_payouts %>%
group_by(Year) %>%
summarise(
total_payouts=n()
)
la_payouts_lines <- la_payouts_by_date %>%
ggplot() +
geom_line(aes(x=Year, y=total_payouts)) +
scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y")
# Display results of code below this codeblock
la_payouts_lines
# Put code to reverse engineer sentence here
la_payouts_by_date <- la_payouts %>%
group_by(Year) %>%
summarise(
total_payouts=n()
)
la_payouts_lines <- la_payouts_by_date %>%
ggplot() +
geom_line(aes(x=Year, y=total_payouts))
# Display results of code below this codeblock
la_payouts_lines
# Put code to reverse engineer sentence here
la_payouts_by_date <- la_payouts %>%
group_by(Year) %>%
summarise(
total_payouts=n(),
)
la_payouts_by_date
la_payouts_lines <- la_payouts_by_date %>%
ggplot() +
geom_line(aes(x=Year, y=total_payouts))
# Display results of code below this codeblock
la_payouts_lines
# Put code to reverse engineer sentence here
la_payouts_by_date <- la_payouts %>%
group_by(Year) %>%
summarise(
total_payouts=n()
)
la_payouts_by_date
la_payouts_lines <- la_payouts_by_date %>%
ggplot() +
geom_line(aes(x=Year, y=total_payouts))
# Display results of code below this codeblock
la_payouts_lines
